#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 3899 0 17 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 24 29 1 #"\n"
0 0 26 3 7 #"#reader"
0 0 24 3 1 #"("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"htdp-advanced-reader.ss\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 24 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 24 3 1 #" "
0 0 14 3 9 #"adventure"
0 0 24 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 24 3 6 #" ()) ("
0 0 14 3 13 #"htdp-settings"
0 0 24 3 3 #" #("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 24 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 4 #"none"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #" () "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 29 #"\"adventure-define-struct.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"macros.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"utilities.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;; OBJECT"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;; Base type for all in-game objects"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 30 #";; adjectives: (listof string)"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 69
(6
 #";; List of adjectives to be printed in the description of this objec"
 #"t"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 25 #";; noun: object -> string"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; Returns the noun to use to describe this object."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"noun"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"type-name-string"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; description-word-list: object -> (listof string)"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 56 #";; The description of the object as a list of individual"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 35 #";; words, e.g. '(\"a\" \"red\" \"door\")."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"description-word-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"the\""
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 17 #"object-adjectives"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"room\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"noun"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 32 #";; description: object -> string"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 77
(7
 #";; Generates a description of the object as a noun phrase, e.g. \"a "
 #"red door\"."
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"words->string"
0 0 24 3 2 #" ("
0 0 14 3 21 #"description-word-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 36 #";; print-description: object -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 48 #";; EFFECT: Prints the description of the object."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"print-description"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 24 3 2 #" ("
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;; CONTAINER"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;; Base type for all game objects that can hold things"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 27 #";; contents: (listof thing)"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 45 #";; List of things presently in this container"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"contents"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 61
#";; container-accessible-contents: container -> (listof thing)"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 81
(8
 #";; Returns the objects from the container that would be accessible t"
 #"o the player."
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 83
(9
 #";; By default, this is all the objects.  But if you want to implemen"
 #"t locked boxes,"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 82
(10
 #";; rooms without light, etc., you can redefine this to withhold the "
 #"contents under"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 32 #";; whatever conditions you like."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 29 #"container-accessible-contents"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 18 #"container-contents"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 46 #";; prepare-to-remove!: container thing -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 53 #";; Called by move when preparing to move thing out of"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 52 #";; this container.  Normally, this does nothing, but"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 54 #";; if you want to prevent the object from being moved,"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 35 #";; you can throw an exception here."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"prepare-to-remove!"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 43 #";; prepare-to-add!: container thing -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; Called by move when preparing to move thing into"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 52 #";; this container.  Normally, this does nothing, but"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 54 #";; if you want to prevent the object from being moved,"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 35 #";; you can throw an exception here."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"prepare-to-add!"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 35 #";; remove!: container thing -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 47 #";; EFFECT: removes the thing from the container"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"remove!"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 23 #"set-container-contents!"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 18 #"container-contents"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 32 #";; add!: container thing -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 82
(11
 #";; EFFECT: adds the thing to the container.  Does not update the thi"
 #"ng's location."
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add!"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 23 #"set-container-contents!"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 18 #"container-contents"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 39 #";; describe-contents: container -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 47 #";; EFFECT: prints the contents of the container"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"describe-contents"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"other-stuff"
0 0 24 3 2 #" ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #" ("
0 0 14 3 29 #"container-accessible-contents"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 11 #"other-stuff"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"There's nothing here.~%\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"You see:~%\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 17 #"print-description"
0 0 24 3 1 #" "
0 0 14 3 11 #"other-stuff"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; move!: thing container -> void"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; Moves thing from its previous location to container."
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; EFFECT: updates location field of thing and contents"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; fields of both the new and old containers."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"move!"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 18 #"prepare-to-remove!"
0 0 24 3 2 #" ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 15 #"prepare-to-add!"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-container"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 16 #"prepare-to-move!"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"remove!"
0 0 24 3 2 #" ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"add!"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-container"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 19 #"set-thing-location!"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 13 #"new-container"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; destroy!: thing -> void"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; EFFECT: removes thing from the game completely."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"destroy!"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 45 #"; We just remove it from its current location"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 34 #"; without adding it anyplace else."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"remove!"
0 0 24 3 2 #" ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 5 #"thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;; ROOM"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;; Base type for rooms and outdoor areas"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 4 #"room"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"  ())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; new-room: string -> room"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Makes a new room with the specified adjectives"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-room"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;; THING"
0 0 24 29 1 #"\n"
0 0 17 3 85
(12
 #";;; Base type for all physical objects that can be inside other obje"
 #"cts such as rooms"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 5 #"thing"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 22 #";; location: container"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 67
#";; What room or other container this thing is presently located in."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"examine"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 17 #"print-description"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 44 #";; prepare-to-move!: thing container -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 51 #";; Called by move when preparing to move thing into"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 47 #";; container.  Normally, this does nothing, but"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 54 #";; if you want to prevent the object from being moved,"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 35 #";; you can throw an exception here."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"prepare-to-move!"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; initialize-thing!: thing -> void"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; EFFECT: adds thing to its initial location"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"add!"
0 0 24 3 2 #" ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 5 #"thing"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; new-thing: string container -> thing"
0 0 24 29 1 #"\n"
0 0 17 3 78
(13
 #";; Makes a new thing with the specified adjectives, in the specified"
 #" location,"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";; and initializes it."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"new-thing"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-thing"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 8 #"location"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 5 #"thing"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;; DOOR"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;; A portal from one room to another"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;; To join two rooms, you need two door objects, one in each room"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 4 #"door"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 25 #";; destination: container"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 31 #";; The place this door leads to"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"destination"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 19 #";; go: door -> void"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 70
(14
 #";; EFFECT: Moves the player to the door's location and (look)s aroun"
 #"d."
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 5 #"move!"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #" ("
0 0 14 3 16 #"door-destination"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"look"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"You can't take that!\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; join: room string room string"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; EFFECT: makes a pair of doors with the specified adjectives"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; connecting the specified rooms."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 5 #"room1"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives1"
0 0 24 3 1 #" "
0 0 14 3 5 #"room2"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"r1->r2"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-door"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 5 #"room1"
0 0 24 3 1 #" "
0 0 14 3 5 #"room2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"r2->r1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-door"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 5 #"room2"
0 0 24 3 1 #" "
0 0 14 3 5 #"room1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 6 #"r1->r2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 6 #"r2->r1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;; PERSON"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;; A character in the game.  The player character is a person."
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 6 #"person"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ()"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"You can't take that!\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; initialize-person: person -> void"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; EFFECT: do whatever initializations are necessary for persons."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"initialize-person!"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; new-person: string container -> person"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Makes a new person object and initializes it."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"new-person"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"make-person"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 8 #"location"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 18 #"initialize-person!"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 6 #"person"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(15
 #";; This is the global variable that holds the person object represen"
 #"ting"
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";; the player.  This gets reset by (start-game)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;; PROP"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;; A thing in the game that can be held by the person."
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 4 #"prop"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 17 3 24 #";; noun-to-print: string"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 86
(16
 #";; The user can set the noun to print in the description so it doesn"
 #"'t just say \"prop\""
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 13 #"noun-to-print"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 23 #";; examine-text: string"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 51 #";; Text to print if the player examines this object"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"examine-text"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"noun"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 18 #"prop-noun-to-print"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"examine"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"display-line"
0 0 24 3 2 #" ("
0 0 14 3 17 #"prop-examine-text"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"move!"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"move!"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"here"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"put"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"move!"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; new-prop: string container -> prop"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Makes a new prop with the specified description."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-prop"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 12 #"examine-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"noun"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-prop"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 8 #"location"
0 0 24 3 1 #" "
0 0 14 3 4 #"noun"
0 0 24 3 1 #" "
0 0 14 3 12 #"examine-text"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 4 #"prop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;; ADD YOUR TYPES HERE!"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;; STAIRS"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;; Like doors, but go between floors"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 6 #"stairs"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ()"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 6 #"stairs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"You can't take that!\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; join-floors: room string room string"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; EFFECT: makes a flight of stairs with the specified adjectives"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; connecting the specified rooms."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"join-floors!"
0 0 24 3 1 #" "
0 0 14 3 5 #"room1"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives1"
0 0 24 3 1 #" "
0 0 14 3 5 #"room2"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"r1->r2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-stairs"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 5 #"room1"
0 0 24 3 1 #" "
0 0 14 3 5 #"room2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"r2->r1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-stairs"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 5 #"room2"
0 0 24 3 1 #" "
0 0 14 3 5 #"room1"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 6 #"r1->r2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 6 #"r2->r1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;; FURNITURE"
0 0 24 29 1 #"\n"
0 0 17 3 74
(17
 #";;; A thing that exists as decoration or to be sat on. I'm almost je"
 #"alous."
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 9 #"furniture"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 17 3 24 #";; noun-to-print: string"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 86 16 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 13 #"noun-to-print"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 23 #";; examine-text: string"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 51 #";; Text to print if the player examines this object"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 12 #"examine-text"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"noun"
0 0 24 3 1 #" "
0 0 14 3 9 #"furniture"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 23 #"furniture-noun-to-print"
0 0 24 3 1 #" "
0 0 14 3 9 #"furniture"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"examine"
0 0 24 3 1 #" "
0 0 14 3 9 #"furniture"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"display-line"
0 0 24 3 2 #" ("
0 0 14 3 22 #"furniture-examine-text"
0 0 24 3 1 #" "
0 0 14 3 9 #"furniture"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 9 #"furniture"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"You can't take that!\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; new-furniture: string container -> furniture"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Makes a new piece of furniture with the specified description."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-furniture"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 12 #"examine-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"noun"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"furniture"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-furniture"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 8 #"location"
0 0 24 3 1 #" "
0 0 14 3 4 #"noun"
0 0 24 3 1 #" "
0 0 14 3 12 #"examine-text"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 9 #"furniture"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 9 #"furniture"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";;; FOOD"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;; A thing that a person can eat!"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 4 #"food"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  ()"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eat"
0 0 24 3 1 #" "
0 0 14 3 4 #"food"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"destroy!"
0 0 24 3 1 #" "
0 0 14 3 4 #"food"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"display-line"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Yum!\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; new-food: string container -> food"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Makes a new piece of food with the specified description."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-food"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 12 #"examine-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"location"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"description"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"noun"
0 0 24 3 2 #" ("
0 0 14 3 4 #"last"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 2 #" ("
0 0 14 3 10 #"drop-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"food"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-food"
0 0 24 3 1 #" "
0 0 14 3 10 #"adjectives"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 8 #"location"
0 0 24 3 1 #" "
0 0 14 3 4 #"noun"
0 0 24 3 1 #" "
0 0 14 3 12 #"examine-text"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 4 #"food"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 4 #"food"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;; LOCKED DOOR"
0 0 24 29 1 #"\n"
0 0 17 3 74
(18
 #";;; A door that joins together two rooms, but its initial state is l"
 #"ocked."
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 11 #"locked-door"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"have?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"locked-door-key"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 5 #"move!"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #" ("
0 0 14 3 16 #"door-destination"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"look"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"print"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"You need the key to unlock this door!\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"join-locked-door!"
0 0 24 3 1 #" "
0 0 14 3 5 #"room1"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives1"
0 0 24 3 1 #" "
0 0 14 3 5 #"room2"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives2"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"r1->r2"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-locked-door"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 5 #"room1"
0 0 24 3 1 #" "
0 0 14 3 5 #"room2"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"r2->r1"
0 0 24 3 2 #" ("
0 0 14 3 16 #"make-locked-door"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 11 #"adjectives2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 5 #"room2"
0 0 24 3 1 #" "
0 0 14 3 5 #"room1"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 6 #"r1->r2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"initialize-thing!"
0 0 24 3 1 #" "
0 0 14 3 6 #"r2->r1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;; USER COMMANDS"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"look"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 14 #" are in ~A.~%\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"description"
0 0 24 3 2 #" ("
0 0 14 3 4 #"here"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"describe-contents"
0 0 24 3 2 #" ("
0 0 14 3 4 #"here"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 4 #"look"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Prints"
0 0 19 3 1 #" "
0 0 19 3 4 #"what"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #" "
0 0 19 3 3 #"see"
0 0 19 3 13 #" in the room\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"my-inventory"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"You"
0 0 19 3 1 #" "
0 0 19 3 3 #"don"
0 0 19 3 20 #"'t have anything.~%\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"You have:~%\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 17 #"print-description"
0 0 24 3 2 #" ("
0 0 14 3 12 #"my-inventory"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Prints"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"things"
0 0 19 3 1 #" "
0 0 19 3 3 #"you"
0 0 19 3 1 #" "
0 0 19 3 3 #"are"
0 0 19 3 20 #" carrying with you.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 7 #"examine"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Takes"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 6 #"closer"
0 0 19 3 1 #" "
0 0 19 3 4 #"look"
0 0 19 3 14 #" at the thing\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Moves"
0 0 19 3 1 #" "
0 0 19 3 4 #"prop"
0 0 19 3 19 #" to your inventory\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 4 #"drop"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Removes"
0 0 19 3 1 #" "
0 0 19 3 4 #"prop"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 4 #"your"
0 0 19 3 1 #" "
0 0 19 3 9 #"inventory"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 6 #"places"
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 13 #" in the room\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 3 #"put"
0 0 24 3 1 #" "
0 0 14 3 4 #"prop"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Moves"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"prop"
0 0 19 3 1 #" "
0 0 19 3 4 #"from"
0 0 19 3 1 #" "
0 0 19 3 3 #"its"
0 0 19 3 1 #" "
0 0 19 3 7 #"current"
0 0 19 3 1 #" "
0 0 19 3 8 #"location"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 1 #" "
0 0 19 3 4 #"puts"
0 0 19 3 1 #" "
0 0 19 3 2 #"it"
0 0 19 3 19 #" in the container.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"help"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 12 #"command-info"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"command-info"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 12 #"command-info"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 7 #"newline"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 17 #"all-user-commands"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 4 #"help"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Displays"
0 0 19 3 23 #" this help information\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 4 #"door"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 2 #"Go"
0 0 19 3 1 #" "
0 0 19 3 7 #"through"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 4 #"door"
0 0 19 3 20 #" to its destination\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 9 #"condition"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"condition"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"display-line"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Check succeeded\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Check failed!!!\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 9 #"condition"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Throws"
0 0 19 3 1 #" "
0 0 19 3 2 #"an"
0 0 19 3 1 #" "
0 0 19 3 9 #"exception"
0 0 19 3 1 #" "
0 0 19 3 2 #"if"
0 0 19 3 21 #" condition is false.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";;food"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-user-command"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eat"
0 0 24 3 1 #" "
0 0 14 3 4 #"food"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Destroys"
0 0 19 3 1 #" "
0 0 19 3 4 #"food"
0 0 19 3 1 #" "
0 0 19 3 3 #"and"
0 0 19 3 26 #" satiates your character.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;; ADD YOUR COMMANDS HERE!"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;; THE GAME WORLD - FILL ME IN"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; start-game: -> void"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Recreate the player object and all the rooms and things."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"start-game"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 39 #";; Fill this in with the rooms you want"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"lobby\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"living-room\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"kitchen\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-4"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"dining-room\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-5"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"piano-room\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-6"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"bathroom\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-7"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"hallway\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-8"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"master-bedroom\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-9"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"guest-room\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-10"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"storage\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-11"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"study\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-12"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"balcony\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-13"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"basement\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-14"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"chamber\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-15"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"cellar\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-16"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"backyard\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-17"
0 0 24 3 2 #" ("
0 0 14 3 8 #"new-room"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"shed\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #";; Add code here to add things to your rooms"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-furniture"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"statue\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 1 #"\""
0 0 19 3 2 #"It"
0 0 19 3 1 #"'"
0 0 19 3 1 #"s"
0 0 19 3 1 #" "
0 0 19 3 36 #"just standing there. Menancingly...\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 6 #"room-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"new-furniture"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"piano\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 1 #"\""
0 0 19 3 1 #"A"
0 0 19 3 1 #" "
0 0 19 3 6 #"rustic"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 3 #"old"
0 0 19 3 1 #" "
0 0 19 3 5 #"grand"
0 0 19 3 1 #" "
0 0 19 3 6 #"piano."
0 0 19 3 1 #" "
0 0 19 3 6 #"Wonder"
0 0 19 3 1 #" "
0 0 19 3 19 #"if it still works.\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 6 #"room-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"new-furniture"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"window\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 1 #"\""
0 0 19 3 1 #"A"
0 0 19 3 1 #" "
0 0 19 3 9 #"beautiful"
0 0 19 3 1 #" "
0 0 19 3 3 #"day"
0 0 19 3 1 #" "
0 0 19 3 7 #"outside"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 7 #"besides"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 25 #"heavy downpour and wind.\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 6 #"room-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-prop"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"cup\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 1 #"\""
0 0 19 3 1 #"A"
0 0 19 3 1 #" "
0 0 19 3 4 #"cup."
0 0 19 3 1 #" "
0 0 19 3 1 #"I"
0 0 19 3 1 #" "
0 0 19 3 3 #"can"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 5 #"think"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 8 #"anything"
0 0 19 3 1 #" "
0 0 19 3 4 #"more"
0 0 19 3 1 #" "
0 0 19 3 17 #"to say about it.\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 6 #"room-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-prop"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"master-bedroom-key\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 50 #"\"A key to the master bedroom on the second floor.\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 6 #"room-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-prop"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"study-key\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 41 #"\"A key to the study on the second floor.\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 7 #"room-13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-prop"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"cellar-key\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 72
(19
 #"\"A mysterious, rusty key. It looks like it hasn't been used in a wh"
 #"ile.\""
) 0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 7 #"room-17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-prop"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"shed-key\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 28 #"\"A key to the shed outside.\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 6 #"room-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 13 #"new-furniture"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"toilet\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 19 3 1 #"\""
0 0 19 3 1 #"A"
0 0 19 3 1 #" "
0 0 19 3 6 #"device"
0 0 19 3 1 #" "
0 0 19 3 3 #"for"
0 0 19 3 1 #" "
0 0 19 3 12 #"transporting"
0 0 19 3 1 #" "
0 0 19 3 5 #"waste"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 30 #"secret, underground facility.\""
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 6 #"room-6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-food"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"apple\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 1 #"\""
0 0 19 3 1 #"A"
0 0 19 3 1 #" "
0 0 19 3 7 #"crunchy"
0 0 19 3 1 #","
0 0 19 3 21 #" red fruit. Healthy!\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 6 #"room-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-food"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"banana\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 1 #"\""
0 0 19 3 1 #"A"
0 0 19 3 1 #" "
0 0 19 3 6 #"yellow"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 7 #"bedtime"
0 0 19 3 22 #" snack. Also healthy!\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 6 #"room-8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"new-food"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"can of corn\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Contains"
0 0 19 3 1 #" "
0 0 19 3 4 #"lots"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 6 #"fiber."
0 0 19 3 18 #" Tons of healthy!\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 6 #"room-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 53 #";; Add join commands to connect your rooms with doors"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #" ("
0 0 14 3 10 #"new-person"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #" "
0 0 14 3 6 #"room-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-1"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"living-room\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"room-2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"lobby\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-1"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"piano-room\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"room-5"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"lobby\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-2"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"kitchen\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"room-3"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"living-room\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-3"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"dining-room\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"room-4"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"kitchen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-4"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"piano-room\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"room-5"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"dining-room\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-5"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"bathroom\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"room-6"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"dining-room\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"join-floors!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"lobby\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 6 #"room-7"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"hallway\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"join-locked-door!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-7"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"master-bedroom\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 6 #"room-8"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"hallway\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 19 3 20 #"\"master-bedroom-key\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-7"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"guest-room\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"room-9"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"hallway\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-7"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"storage\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"room-10"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"hallway\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"join-locked-door!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-7"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"study\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 7 #"room-11"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"hallway\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 19 3 11 #"\"study-key\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-7"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"balcony\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"room-12"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"hallway\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 12 #"join-floors!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-5"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"piano-room\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 14 3 7 #"room-13"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"basement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-13"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"chamber\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"room-14"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"basement\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"join-locked-door!"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-14"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"cellar\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 7 #"room-15"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"chamber\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 19 3 12 #"\"cellar-key\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"join!"
0 0 24 3 1 #" "
0 0 14 3 6 #"room-3"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"backyard\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 7 #"room-16"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"kitchen\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"join-locked-door!"
0 0 24 3 1 #" "
0 0 14 3 7 #"room-16"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"shed\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 7 #"room-17"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"backyard\""
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 19 3 10 #"\"shed-key\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 17 #"check-containers!"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;; PUT YOUR WALKTHROUGHS HERE"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;; UTILITIES"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; here: -> container"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; The current room the player is in"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; stuff-here: -> (listof thing)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; All the stuff in the room the player is in"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stuff-here"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 29 #"container-accessible-contents"
0 0 24 3 2 #" ("
0 0 14 3 4 #"here"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; stuff-here-except-me: -> (listof thing)"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; All the stuff in the room the player is in except the player."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"stuff-here-except-me"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"remove"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #" ("
0 0 14 3 10 #"stuff-here"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; my-inventory: -> (listof thing)"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; List of things in the player's pockets."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"my-inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 29 #"container-accessible-contents"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; accessible-objects -> (listof thing)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; All the objects that should be searched by find and the."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"accessible-objects"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 20 #"stuff-here-except-me"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 12 #"my-inventory"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; have?: thing -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; True if the thing is in the player's pocket."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"have?"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 2 #"me"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; have-a?: predicate -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 73
(20
 #";; True if the player has something satisfying predicate in their po"
 #"cket."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"have-a?"
0 0 24 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 9 #"predicate"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 29 #"container-accessible-contents"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; find-the: (listof string) -> object"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Returns the object from (accessible-objects)"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; whose name contains the specified words."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"find-the"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 5 #"words"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 18 #"accessible-objects"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; find-within: container (listof string) -> object"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Like find-the, but searches the contents of the container"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; whose name contains the specified words."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-within"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 5 #"words"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"find"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"o"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 3 #") ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 1 #"o"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 5 #"words"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 29 #"container-accessible-contents"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; find: (object->boolean) (listof thing) -> object"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; Search list for an object matching predicate."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"find"
0 0 24 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"matches"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"matches"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"There"
0 0 19 3 1 #"'"
0 0 19 3 1 #"s"
0 0 19 3 1 #" "
0 0 19 3 7 #"nothing"
0 0 19 3 1 #" "
0 0 19 3 4 #"like"
0 0 19 3 1 #" "
0 0 19 3 4 #"that"
0 0 19 3 7 #" here!\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"matches"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 11 #"Which one?\""
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; everything: -> (listof container)"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Returns all the objects reachable from the player in the game"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; world.  So if you create an object that's in a room the player"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; has no door to, it won't appear in this list."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"everything"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"all-containers"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 54 #"; Add container, and then recursively add its contents"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 50 #"; and location and/or destination, as appropriate."
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"walk"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 49 #"; Ignore the container if its already in our list"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 14 #"all-containers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 14 #"all-containers"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #" "
0 0 14 3 14 #"all-containers"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 18 #"; Add its contents"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 4 #"walk"
0 0 24 3 2 #" ("
0 0 14 3 18 #"container-contents"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 41 #"; If it's a door, include its destination"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 5 #"door?"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"walk"
0 0 24 3 2 #" ("
0 0 14 3 16 #"door-destination"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 17 3 41 #"; If  it's a thing, include its location."
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 6 #"thing?"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"walk"
0 0 24 3 2 #" ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 37 #"; Start the recursion with the player"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 4 #"walk"
0 0 24 3 1 #" "
0 0 14 3 2 #"me"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 14 #"all-containers"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; print-everything: -> void"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Prints all the objects in the game."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"print-everything"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 12 #"display-line"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"All"
0 0 19 3 1 #" "
0 0 19 3 7 #"objects"
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 7 #" game:\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 17 #"print-description"
0 0 24 3 2 #" ("
0 0 14 3 10 #"everything"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; every: (container -> boolean) -> (listof container)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; A list of all the objects from (everything) that satisfy"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; the predicate."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"every"
0 0 24 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"everything"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; print-every: (container -> boolean) -> void"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Prints all the objects satisfying predicate."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"print-every"
0 0 24 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 1 #" "
0 0 14 3 17 #"print-description"
0 0 24 3 2 #" ("
0 0 14 3 5 #"every"
0 0 24 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; check-containers: -> void"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; Throw an exception if there is an thing whose location and"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; container disagree with one another."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"check-containers!"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"thing-location"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 5 #"has \""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 2 #"in"
0 0 19 3 1 #" "
0 0 19 3 3 #"its"
0 0 19 3 1 #" "
0 0 19 3 8 #"contents"
0 0 19 3 1 #" "
0 0 19 3 4 #"list"
0 0 19 3 1 #" "
0 0 19 3 5 #"but \""
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 11 #"description"
0 0 24 3 1 #" "
0 0 14 3 5 #"thing"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 3 #"has"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 9 #"different"
0 0 19 3 11 #" location.\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 18 #"container-contents"
0 0 24 3 1 #" "
0 0 14 3 9 #"container"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"everything"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; is-a?: object word -> boolean"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; True if word appears in the description of the object"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; or is the name of one of its types"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (("
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 4 #"word"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"probe"
0 0 24 3 2 #" ("
0 0 14 3 20 #"name->type-predicate"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 5 #"probe"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 21 #"description-word-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 5 #"probe"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; display-line: object -> void"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; EFFECT: prints object using display, and then starts a new line."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"display-line"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 7 #"newline"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; words->string: (listof string) -> string"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Converts a list of one-word strings into a single string,"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; e.g. '(\""
0 0 17 3 1 #"a"
0 0 17 3 3 #"\" \""
0 0 17 3 3 #"red"
0 0 17 3 3 #"\" \""
0 0 17 3 4 #"door"
0 0 17 3 7 #"\") -> \""
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"red"
0 0 17 3 6 #" door\""
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"words->string"
0 0 24 3 1 #" "
0 0 14 3 9 #"word-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"word-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 9 #"word-list"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; string->words: string -> (listof string)"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Converts a string containing words to a list of the individual"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; words.  Inverse of words->string."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string->words"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 6 #"string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; add-a-or-an: (listof string) -> (listof string)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Prefixes a list of words with \""
0 0 17 3 1 #"a"
0 0 17 3 20 #"\" or \"an\", depending"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; on whether the first word in the list begins with a"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; vowel."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"add-a-or-an"
0 0 24 3 1 #" "
0 0 14 3 9 #"word-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"first-word"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"word-list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"first-char"
0 0 24 3 2 #" ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 10 #"first-word"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"starts-with-vowel?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"string-contains?"
0 0 24 3 1 #" "
0 0 14 3 10 #"first-char"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"aeiou\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 18 #"starts-with-vowel?"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 4 #"\"an\""
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 19 3 3 #"\"a\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 9 #"word-list"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; The following calls are filling in blanks in the other files."
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; This is needed because this file is in a different langauge than"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; the others."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"set-find-the!"
0 0 24 3 1 #" "
0 0 14 3 8 #"find-the"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 16 #"set-find-within!"
0 0 24 3 1 #" "
0 0 14 3 11 #"find-within"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 17 #"set-restart-game!"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 5 #" () ("
0 0 14 3 10 #"start-game"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"game-print"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"void"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 7 #"object?"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 17 #"print-description"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"write"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"current-print"
0 0 24 3 1 #" "
0 0 14 3 10 #"game-print"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;; Start it up"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"start-game"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"look"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
